// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// DexG1Point is an auto generated low-level Go binding around an user-defined struct.
type DexG1Point struct {
	X *big.Int
	Y *big.Int
}

// DexG2Point is an auto generated low-level Go binding around an user-defined struct.
type DexG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReceived\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point[][]\",\"name\":\"p1\",\"type\":\"tuple[][]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structDex.G2Point[][]\",\"name\":\"p2\",\"type\":\"tuple[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tmp\",\"type\":\"uint256[][]\"},{\"internalType\":\"string\",\"name\":\"gid\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"attr\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"Checkkey\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"Checkkeyresult\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point[][]\",\"name\":\"p1\",\"type\":\"tuple[][]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structDex.G2Point[][]\",\"name\":\"p2\",\"type\":\"tuple[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tmp\",\"type\":\"uint256[][]\"},{\"internalType\":\"string\",\"name\":\"gid\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"attr\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"Checkkeyp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"GID\",\"type\":\"string\"}],\"name\":\"Deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pt1xx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1xy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2xx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2xy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2yx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt2yy\",\"type\":\"uint256\"}],\"name\":\"ECTwistAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1xx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1xy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pt1yy\",\"type\":\"uint256\"}],\"name\":\"ECTwistMul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"GID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ownerVal\",\"type\":\"uint256\"}],\"name\":\"Expect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"Q\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"startIdx\",\"type\":\"uint256\"}],\"name\":\"GSSRecon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetFieldModulus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetKeyVrfResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetVerifyResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"HashToG1\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"C\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"decShare\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structDex.G2Point\",\"name\":\"pk2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structDex.G2Point\",\"name\":\"g2\",\"type\":\"tuple\"}],\"name\":\"PVGSSKeyVrf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point[]\",\"name\":\"C\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point[]\",\"name\":\"PK\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nodeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"Q\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"startIdx\",\"type\":\"uint256\"}],\"name\":\"PVGSSVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addrU\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addrO\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addrsAA\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"GID\",\"type\":\"string\"}],\"name\":\"Reward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point[]\",\"name\":\"cp\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"xc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shat\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"shatArray\",\"type\":\"uint256[]\"}],\"name\":\"UploadProof\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"GID\",\"type\":\"string\"}],\"name\":\"Withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"childIdxs\",\"type\":\"uint256[]\"}],\"name\":\"addChild\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structDex.G2Point\",\"name\":\"EK1Arr\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structDex.G2Point\",\"name\":\"EK1pArr\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"w3\",\"type\":\"uint256\"}],\"name\":\"checkkey_eq2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLeaf\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"childNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"}],\"name\":\"createNode\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"empty\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"expects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"p\",\"type\":\"tuple\"}],\"name\":\"negate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structDex.G1Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nodes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"IsLeaf\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"Childrennum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Idx\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"path\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"IsLeaf\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"Childrennum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Idx\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60016080819052600260a08190526000829055908190557f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101009081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101205260c08181526101806040527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6101409081527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa6101605260e05291906100ca908290816100f5565b5060208201516100e090600280840191906100f5565b5050503480156100ef57600080fd5b50610148565b8260028101928215610123579160200282015b82811115610123578251825591602001919060010190610108565b5061012f929150610133565b5090565b5b8082111561012f5760008155600101610134565b613f69806101576000396000f3fe6080604052600436106101b75760003560e01c80639dfc1b6f116100ec578063d1bef29f1161008a578063ee3dffef11610064578063ee3dffef14610541578063f2a75fe414610556578063f318e3a614610562578063fb6b9e9a1461057557600080fd5b8063d1bef29f146104c1578063e752b54b146104d4578063ebaf1aca1461050c57600080fd5b8063acd6c00f116100c6578063acd6c00f14610459578063b73ab75d1461047b578063c6f90b231461049b578063cb36594c146104ae57600080fd5b80639dfc1b6f14610420578063a12988bd14610433578063a6696ceb1461044657600080fd5b8063357291301161015957806355a3e90f1161013357806355a3e90f1461039957806361a931ec146103ba57806380dfa405146103fa5780639b2c76211461040d57600080fd5b806335729130146103335780633aecd0e3146103535780633dc063561461037357600080fd5b80631c53c280116101955780631c53c2801461025b57806327e235e3146102c3578063299c8d47146102f0578063308be0121461031357600080fd5b8063129ee0f6146101bc57806317743e69146101ef5780631876226214610204575b600080fd5b6101cf6101ca366004613320565b610588565b604080518251815260209283015192810192909252015b60405180910390f35b6102026101fd36600461336d565b610600565b005b34801561021057600080fd5b5061024d61021f3660046133d2565b6017602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6040519081526020016101e6565b34801561026757600080fd5b506102a161027636600461341f565b601360205260009081526040902080546002820154600383015460049093015460ff90921692909184565b60408051941515855260208501939093529183015260608201526080016101e6565b3480156102cf57600080fd5b5061024d6102de366004613438565b60186020526000908152604090205481565b6103036102fe366004613513565b61064a565b60405190151581526020016101e6565b34801561031f57600080fd5b5061030361032e3660046138ba565b6106c0565b34801561033f57600080fd5b5061020261034e36600461399b565b610e2f565b34801561035f57600080fd5b5061024d61036e366004613438565b610f68565b34801561037f57600080fd5b50600a54600c54600d54600e546102a19360ff1692919084565b3480156103a557600080fd5b50600080516020613ef483398151915261024d565b3480156103c657600080fd5b506103da6103d53660046139c5565b610fd3565b6040805194855260208501939093529183015260608201526080016101e6565b610303610408366004613320565b611129565b61030361041b366004613a1a565b611161565b6101cf61042e3660046138ba565b61137d565b610303610441366004613ab3565b6116e5565b610303610454366004613b95565b61195d565b34801561046557600080fd5b5061046e611aa3565b6040516101e69190613bdc565b34801561048757600080fd5b506103da610496366004613c22565b611b1b565b6102026104a9366004613c5d565b611ba2565b6103036104bc366004613320565b611c44565b6103036104cf366004613cc7565b611d2d565b3480156104e057600080fd5b5061024d6104ef366004613320565b805160208183018101805160168252928201919093012091525481565b34801561051857600080fd5b5061052c610527366004613d0b565b611d59565b604080519283526020830191909152016101e6565b34801561054d57600080fd5b5061046e611f47565b34801561020257600080fd5b610202610570366004613d5a565b611fa3565b6101cf610583366004613d96565b612071565b60408051808201909152600080825260208201526105fa6105cb604080518082018252600080825260209182015281518083019092526001825260029082015290565b836040516020016105dc9190613db2565b6040516020818303038152906040528051906020012060001c612107565b92915050565b60008461060e876064613df7565b6106189190613e0e565b6000908152601360205260409020805460ff191694151594909417845550600283019190915560038201556004015550565b600080610661858561065b89612071565b8661215c565b60098054600181018255600091909152602081047f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018054831515601f9093166101000a92830260ff9093021916919091179055915050949350505050565b60006106df604051806040016040528060008152602001600081525090565b60006106ea86610588565b905060005b8951811015610e1f5761071a86828151811061070d5761070d613e21565b6020026020010151610588565b92506108666107cb8b838151811061073457610734613e21565b602002602001015160018151811061074e5761074e613e21565b60200260200101516107c68d858151811061076b5761076b613e21565b602002602001015160008151811061078557610785613e21565b60200260200101518c868151811061079f5761079f613e21565b60200260200101516000815181106107b9576107b9613e21565b6020026020010151612107565b612267565b610861610831610801898d87815181106107e7576107e7613e21565b60200260200101516001815181106107b9576107b9613e21565b6107c6878e888151811061081757610817613e21565b60200260200101516002815181106107b9576107b9613e21565b6107c6878d878151811061084757610847613e21565b60200260200101516003815181106107b9576107b9613e21565b6122bf565b61089d5760405162461bcd60e51b815260206004820152600360248201526265713160e81b60448201526064015b60405180910390fd5b60408051808201909152600054815260015460208201528851610950916108d0918b908590811061084757610847613e21565b6108618c84815181106108e5576108e5613e21565b60200260200101516004815181106108ff576108ff613e21565b60200260200101516107c68e868151811061091c5761091c613e21565b602002602001015160028151811061093657610936613e21565b60200260200101518d878151811061079f5761079f613e21565b61095957600080fd5b60408051600280825260608201909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816109715750506040805160028082526060820190925291925060009190602082015b6109bb613188565b8152602001906001900390816109b3579050509050610a0c8c84815181106109e5576109e5613e21565b60200260200101516002815181106109ff576109ff613e21565b6020026020010151612071565b82600081518110610a1f57610a1f613e21565b602002602001018190525060006040518060400160405290816000820154815260200160018201548152505082600181518110610a5e57610a5e613e21565b60209081029190910101526040805160808101808352909160029183918201908390819081845b815481526020019060010190808311610a8557505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610abb5750505050508152505081600081518110610aea57610aea613e21565b60200260200101819052508a8381518110610b0757610b07613e21565b6020026020010151600081518110610b2157610b21613e21565b602002602001015181600181518110610b3c57610b3c613e21565b6020026020010181905250610b5182826122e1565b610b5a57600080fd5b60408051600480825260a08201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610b725790505090508781600081518110610baf57610baf613e21565b60200260200101819052508481600181518110610bce57610bce613e21565b60200260200101819052508581600281518110610bed57610bed613e21565b6020026020010181905250610c278d8581518110610c0d57610c0d613e21565b60200260200101516001815181106109ff576109ff613e21565b81600381518110610c3a57610c3a613e21565b602090810291909101015260408051600480825260a08201909252600091816020015b610c65613188565b815260200190600190039081610c5d5790505090508c8581518110610c8c57610c8c613e21565b6020026020010151600281518110610ca657610ca6613e21565b602002602001015181600081518110610cc157610cc1613e21565b60200260200101819052508c8581518110610cde57610cde613e21565b6020026020010151600381518110610cf857610cf8613e21565b602002602001015181600181518110610d1357610d13613e21565b60200260200101819052508c8581518110610d3057610d30613e21565b6020026020010151600081518110610d4a57610d4a613e21565b602002602001015181600281518110610d6557610d65613e21565b60209081029190910101526040805160808101808352909160029183918201908390819081845b815481526020019060010190808311610d8c57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610dc25750505050508152505081600381518110610df157610df1613e21565b6020026020010181905250610e0682826122e1565b610e0f57600080fd5b5050600190920191506106ef9050565b5060019998505050505050505050565b60008111610e7f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610894565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef69190613e37565b506001600160a01b03821660009081526018602052604081208054839290610f1f908490613e0e565b909155505060405181815233906001600160a01b038416907f0af1239547617509a79d1ff0ee4be9ca943bc8410cb0b282dda97d27995a0acd9060200160405180910390a35050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190613e54565b60008080808b158015610fe457508a155b8015610fee575089155b8015610ff8575088155b156110495787158015611009575086155b8015611013575085155b801561101d575084155b6110395761102d888888886125ae565b61103957611039613e6d565b508692508591508490508361111a565b87158015611055575086155b801561105f575085155b8015611069575084155b156110965761107a8c8c8c8c6125ae565b61108657611086613e6d565b508a92508991508890508761111a565b6110a28c8c8c8c6125ae565b6110ae576110ae613e6d565b6110ba888888886125ae565b6110c6576110c6613e6d565b60006110e08d8d8d8d600160008f8f8f8f60016000612663565b90506111108160005b602090810291909101519083015160408401516060850151608086015160a08701516128ec565b9450945094509450505b98509850985098945050505050565b336000908152601760205260408082209051349190611149908590613db2565b90815260405190819003602001902055506001919050565b6000805b60125481101561136e576000600f600001828154811061118757611187613e21565b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050905060006111e08984815181106111cd576111cd613e21565b6020026020010151600f60010154612107565b905060006112278985815181106111f9576111f9613e21565b6020026020010151600f600301868154811061121757611217613e21565b9060005260206000200154612107565b905060006112358383612267565b905061124184826122bf565b61129b5750506008805460018101825560009182527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee360208204018054601f9092166101000a60ff02199091169055935061137492505050565b6000806112a98b8b8b611d59565b6011549193509150821461130f5750506008805460018101825560009182527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee360208204018054601f9092166101000a60ff021990911690559550611374945050505050565b50506008805460018181018355600092909252602081047ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805460ff601f9093166101000a9283021916909117905594909401935061116592505050565b50600190505b95945050505050565b604080518082019091526000808252602082015260005b87518110156116da576114846114208983815181106113b5576113b5613e21565b60200260200101516001815181106113cf576113cf613e21565b60200260200101516107c68b85815181106113ec576113ec613e21565b602002602001015160008151811061140657611406613e21565b60200260200101518a868151811061079f5761079f613e21565b61086161145a61143c878b87815181106107e7576107e7613e21565b6107c66114488b610588565b8c888151811061081757610817613e21565b6107c661147289878151811061070d5761070d613e21565b8b878151811061084757610847613e21565b6114b65760405162461bcd60e51b815260206004820152600360248201526265713160e81b6044820152606401610894565b61158e8782815181106114cb576114cb613e21565b60200260200101516000815181106114e5576114e5613e21565b60200260200101518883815181106114ff576114ff613e21565b602002602001015160018151811061151957611519613e21565b602002602001015188848151811061153357611533613e21565b602002602001015160008151811061154d5761154d613e21565b602002602001015189858151811061156757611567613e21565b602002602001015160038151811061158157611581613e21565b602002602001015161195d565b6115c05760405162461bcd60e51b815260206004820152600360248201526232b89960e91b6044820152606401610894565b6116a0838883815181106115d6576115d6613e21565b60200260200101516002815181106115f0576115f0613e21565b602002602001015161160188610588565b8a858151811061161357611613613e21565b602002602001015160038151811061162d5761162d613e21565b602002602001015161164a89878151811061070d5761070d613e21565b8c878151811061165c5761165c613e21565b602002602001015160008151811061167657611676613e21565b60200260200101516116938f8981518110610c0d57610c0d613e21565b61169b612936565b6129f6565b6116d25760405162461bcd60e51b815260206004820152600360248201526265713360e81b6044820152606401610894565b600101611394565b509695505050505050565b604051600090859085906016906116fd908690613db2565b90815260200160405180910390205460176000846001600160a01b03166001600160a01b031681526020019081526020016000208560405161173f9190613db2565b908152602001604051809103902054116117915760405162461bcd60e51b81526020600482015260136024820152721393c819195c1bdcda5d1cc81a5b881c1bdbdb606a1b6044820152606401610894565b806001600160a01b03166108fc6016866040516117ae9190613db2565b90815260405190819003602001812054801590920291906000818181858888f193505050501580156117e4573d6000803e3d6000fd5b506016846040516117f59190613db2565b90815260200160405180910390205460176000846001600160a01b03166001600160a01b03168152602001908152602001600020856040516118379190613db2565b9081526020016040518091039020546118509190613e83565b6001600160a01b038316600090815260176020526040908190209051611877908790613db2565b9081526040519081900360200190205560005b85518160ff16101561194f576000868260ff16815181106118ad576118ad613e21565b60200260200101519050806001600160a01b03166108fc885160176000886001600160a01b03166001600160a01b03168152602001908152602001600020896040516118f99190613db2565b9081526020016040518091039020546119129190613eac565b6040518115909202916000818181858888f1935050505015801561193a573d6000803e3d6000fd5b5050808061194790613ec0565b91505061188a565b506001979650505050505050565b600061198a6040518060800160405280600081526020016000815260200160008152602001600081525090565b85516020808201519151818901519182015191516119ac938893909291611b1b565b606085810191825260408087019384526020808801958652958752805160808101825260008082528188018190529181018290529182015289518086015190518b87015196870151965188519651955194519397611a139793969295909491939291610fd3565b6060850152604084015260208301528152600354600254600554600454611a3f93889390929091611b1b565b6060860152604085015260208401528083528151148015611a67575080602001518260200151145b8015611a7a575080604001518260400151145b8015611a8d575080606001518260600151145b611a9657600080fd5b5060019695505050505050565b60606009805480602002602001604051908101604052809291908181526020018280548015611b1157602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411611ae05790505b5050505050905090565b6000808080600188158015611b2e575087155b8015611b38575086155b8015611b42575085155b15611b565750600197508795506000611b6e565b611b62898989896125ae565b611b6e57611b6e613e6d565b6000611b808b8b8b8b8b876000612b81565b9050611b8d8160006110e9565b929e919d509b50909950975050505050505050565b60005b8151811015611c3657600f600001858281518110611bc557611bc5613e21565b60209081029190910181015182546001818101855560009485529383902082516002909202019081559101519101558151601290839083908110611c0b57611c0b613e21565b6020908102919091018101518254600181810185556000948552929093209092019190915501611ba5565b505060109190915560115550565b336000908152601760205260408082209051829190611c64908590613db2565b90815260200160405180910390205411611cb65760405162461bcd60e51b81526020600482015260136024820152721393c819195c1bdcda5d1cc81a5b881c1bdbdb606a1b6044820152606401610894565b336000818152601760205260409081902090516108fc9190611cd9908690613db2565b90815260405190819003602001812054801590920291906000818181858888f19350505050158015611d0f573d6000803e3d6000fd5b50336000908152601760205260408082209051611149908590613db2565b600081601684604051611d409190613db2565b9081526040519081900360200190205550600192915050565b6000838152601360205260408120805482919060ff1615611d9d57848481518110611d8657611d86613e21565b602002602001015181600401549250925050611f3f565b600081600301546001600160401b03811115611dbb57611dbb613243565b604051908082528060200260200182016040528015611de4578160200160208202803683370190505b509050600082600301546001600160401b03811115611e0557611e05613243565b604051908082528060200260200182016040528015611e2e578160200160208202803683370190505b50905060005b8360030154811015611ec4576000846001018281548110611e5757611e57613e21565b6000918252602082200154915080611e74838c610527878e613e0e565b809250819350505081868581518110611e8f57611e8f613e21565b60200260200101818152505080858581518110611eae57611eae613e21565b6020908102919091010152505050600101611e34565b50826003015482511015611f285760405162461bcd60e51b815260206004820152602560248201527f496e737566696369656e742073686172657320666f72207265636f6e7374727560448201526431ba34b7b760d91b6064820152608401610894565b611f328282612bf9565b8360040154945094505050505b935093915050565b60606008805480602002602001604051908101604052809291908181526020018280548015611b11576000918252602091829020805460ff1615158452908202830192909160019101808411611ae05790505050505050905090565b805160008381526013602052604090206002015483911115611ff85760405162461bcd60e51b815260206004820152600e60248201526d151bdbc81b585b9e4818da1a5b1960921b6044820152606401610894565b6000818152601360205260408120905b835181101561206a57600084828151811061202557612025613e21565b602002602001015186606461203a9190613df7565b6120449190613e0e565b600180850180548083018255600091825260209091200191909155919091019050612008565b5050505050565b6040805180820190915260008082526020820152815115801561209657506020820151155b156120b4575050604080518082019091526000808252602082015290565b604051806040016040528083600001518152602001600080516020613ef483398151915284602001516120e79190613edf565b6120ff90600080516020613ef4833981519152613e83565b905292915050565b60408051808201909152600080825260208201526121236131ad565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa90508061215457600080fd5b505092915050565b60408051600280825260608201909252600091829190816020015b60408051808201909152600080825260208201528152602001906001900390816121775750506040805160028082526060820190925291925060009190602082015b6121c1613188565b8152602001906001900390816121b957905050905086826000815181106121ea576121ea613e21565b6020026020010181905250848260018151811061220957612209613e21565b6020026020010181905250858160008151811061222857612228613e21565b6020026020010181905250838160018151811061224757612247613e21565b602002602001018190525061225c82826122e1565b979650505050505050565b60408051808201909152600080825260208201526122836131cb565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa90508061215457600080fd5b805182516000911480156122da575081602001518360200151145b9392505050565b600081518351146122f157600080fd5b82516000612300826006613df7565b90506000816001600160401b0381111561231c5761231c613243565b604051908082528060200260200182016040528015612345578160200160208202803683370190505b50905060005b838110156125765786818151811061236557612365613e21565b6020026020010151600001518282600661237f9190613df7565b61238a906000613e0e565b8151811061239a5761239a613e21565b6020026020010181815250508681815181106123b8576123b8613e21565b602002602001015160200151828260066123d29190613df7565b6123dd906001613e0e565b815181106123ed576123ed613e21565b60200260200101818152505085818151811061240b5761240b613e21565b6020908102919091010151515182612424836006613df7565b61242f906002613e0e565b8151811061243f5761243f613e21565b60200260200101818152505085818151811061245d5761245d613e21565b60209081029190910181015151015182612478836006613df7565b612483906003613e0e565b8151811061249357612493613e21565b6020026020010181815250508581815181106124b1576124b1613e21565b6020026020010151602001516000600281106124cf576124cf613e21565b6020020151826124e0836006613df7565b6124eb906004613e0e565b815181106124fb576124fb613e21565b60200260200101818152505085818151811061251957612519613e21565b60200260200101516020015160016002811061253757612537613e21565b602002015182612548836006613df7565b612553906005613e0e565b8151811061256357612563613e21565b602090810291909101015260010161234b565b5061257f6131e9565b6000602082602086026020860160086107d05a03fa9050806125a057600080fd5b505115159695505050505050565b60008060008060006125c287878989612cdc565b90945092506125d389898181612cdc565b90925090506125e482828b8b612cdc565b90925090506125f584848484612d4d565b909450925061264584847f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e57e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2612d4d565b909450925083158015612656575082155b9998505050505050505050565b61266b613207565b88158015612677575087155b156126b9578686868686868660005b60a089019290925260808801929092526060870192909252604086019290925260208581019390935290910201526128dc565b821580156126c5575081155b156126d8578c8c8c8c8c8c866000612686565b6126e485858b8b612cdc565b90955093506126f58b8b8585612cdc565b6060830152604082015261270b87878b8b612cdc565b909750955061271c8d8d8585612cdc565b60a08301526080820181905287148015612739575060a081015186145b1561277e576040810151851480156127545750606081015184145b1561276f576127678d8d8d8d8d8d612d8f565b866000612686565b60016000818180808681612686565b61278a89898585612cdc565b90935091506127aa858583600260200201518460035b6020020151612d4d565b909d509b506127c4878783600460200201518460056127a0565b909b5099506127d58b8b8181612cdc565b90995097506127f5898983600460200201518460055b6020020151612cdc565b909550935061280689898d8d612cdc565b909950975061281789898585612cdc565b60a0830152608082015261282d8d8d8181612cdc565b909750955061283e87878585612cdc565b909750955061284f87878b8b612d4d565b909750955061286085856002612efe565b909350915061287187878585612d4d565b90975095506128828b8b8989612cdc565b6020830152815261289585858989612d4d565b909b5099506128a68d8d8d8d612cdc565b909b5099506128c0898983600260200201518460036127eb565b909d509b506128d18b8b8f8f612d4d565b606083015260408201525b9c9b505050505050505050505050565b6000806000806000806128ff8888612f31565b90925090506129108c8c8484612cdc565b90965094506129218a8a8484612cdc565b969d959c509a50949850929650505050505050565b61293e613188565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b82527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60208381019190915281019190915290565b60408051600480825260a08201909252600091829190816020015b6040805180820190915260008082526020820152815260200190600190039081612a1157505060408051600480825260a0820190925291925060009190602082015b612a5b613188565b815260200190600190039081612a535790505090508a82600081518110612a8457612a84613e21565b60200260200101819052508882600181518110612aa357612aa3613e21565b60200260200101819052508682600281518110612ac257612ac2613e21565b60200260200101819052508482600381518110612ae157612ae1613e21565b60200260200101819052508981600081518110612b0057612b00613e21565b60200260200101819052508781600181518110612b1f57612b1f613e21565b60200260200101819052508581600281518110612b3e57612b3e613e21565b60200260200101819052508381600381518110612b5d57612b5d613e21565b6020026020010181905250612b7282826122e1565b9b9a5050505050505050505050565b612b89613207565b871561225c576001881615612bca578051602082015160408301516060840151608085015160a0860151612bc79594939291908d8d8d8d8d8d612663565b90505b612bd8878787878787612d8f565b949b50929950909750955093509150612bf2600289613eac565b9750612b89565b805160009081816001600160401b03811115612c1757612c17613243565b604051908082528060200260200182016040528015612c40578160200160208202803683370190505b509050612c4c84612fbc565b90506000805b83811015612cd2576000838281518110612c6e57612c6e613e21565b602002602001015190506000600080516020613f1483398151915280612c9657612c96613e96565b828a8581518110612ca957612ca9613e21565b6020026020010151099050600080516020613f1483398151915281850893505050600101612c52565b5095945050505050565b600080612d1a600080516020613ef4833981519152858809600080516020613ef4833981519152858809600080516020613ef4833981519152613113565b600080516020613ef483398151915280868809600080516020613ef4833981519152868a09089150915094509492505050565b600080612d698685600080516020613ef4833981519152613113565b612d828685600080516020613ef4833981519152613113565b9150915094509492505050565b600080600080600080612da48c8c6003612efe565b9096509450612db586868e8e612cdc565b9096509450612dc68a8a8a8a612cdc565b9098509650612dd78c8c8c8c612cdc565b9094509250612de884848a8a612cdc565b9094509250612df986868181612cdc565b909c509a50612e0a84846008612efe565b9092509050612e1b8c8c8484612d4d565b909c509a50612e2c88888181612cdc565b9092509050612e3d84846004612efe565b9094509250612e4e84848e8e612d4d565b9094509250612e5f84848888612cdc565b9094509250612e708a8a6008612efe565b9096509450612e8186868c8c612cdc565b9096509450612e9286868484612cdc565b9096509450612ea384848888612d4d565b9094509250612eb48c8c6002612efe565b9096509450612ec586868a8a612cdc565b9096509450612ed688888484612cdc565b9092509050612ee782826008612efe565b809250819350505096509650965096509650969050565b600080600080516020613ef4833981519152838609600080516020613ef483398151915284860991509150935093915050565b60008080612f72600080516020613ef483398151915280878809600080516020613ef483398151915287880908600080516020613ef4833981519152613137565b9050600080516020613ef4833981519152818609600080516020613ef4833981519152828609612fb090600080516020613ef4833981519152613e83565b92509250509250929050565b80516060906000816001600160401b03811115612fdb57612fdb613243565b604051908082528060200260200182016040528015613004578160200160208202803683370190505b50905060005b8281101561310b57600160005b848110156130e3578083146130db57600087828151811061303a5761303a613e21565b60200260200101519050600061309189848151811061305b5761305b613e21565b60200260200101518a878151811061307557613075613e21565b6020026020010151600080516020613f14833981519152613113565b905060006130ad82600080516020613f14833981519152613137565b9050600080516020613f148339815191528386099450600080516020613f1483398151915281860994505050505b600101613017565b50808383815181106130f7576130f7613e21565b60209081029190910101525060010161300a565b509392505050565b6000818061312357613123613e96565b61312d8484613e83565b8508949350505050565b60008060405160208152602080820152602060408201528460608201526002840360808201528360a082015260208160c08360056107d05a03fa9051925090508061318157600080fd5b5092915050565b604051806040016040528061319b613225565b81526020016131a8613225565b905290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561327b5761327b613243565b60405290565b604051601f8201601f191681016001600160401b03811182821017156132a9576132a9613243565b604052919050565b600082601f8301126132c257600080fd5b81356001600160401b038111156132db576132db613243565b6132ee601f8201601f1916602001613281565b81815284602083860101111561330357600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561333257600080fd5b81356001600160401b0381111561334857600080fd5b613354848285016132b1565b949350505050565b801515811461336a57600080fd5b50565b600080600080600060a0868803121561338557600080fd5b8535945060208601359350604086013561339e8161335c565b94979396509394606081013594506080013592915050565b80356001600160a01b03811681146133cd57600080fd5b919050565b600080604083850312156133e557600080fd5b6133ee836133b6565b915060208301356001600160401b0381111561340957600080fd5b613415858286016132b1565b9150509250929050565b60006020828403121561343157600080fd5b5035919050565b60006020828403121561344a57600080fd5b6122da826133b6565b60006040828403121561346557600080fd5b61346d613259565b9050813581526020820135602082015292915050565b600082601f83011261349457600080fd5b61349c613259565b8060408401858111156134ae57600080fd5b845b818110156134c85780358452602093840193016134b0565b509095945050505050565b6000608082840312156134e557600080fd5b6134ed613259565b90506134f98383613483565b81526135088360408401613483565b602082015292915050565b600080600080610180858703121561352a57600080fd5b6135348686613453565b93506135438660408701613453565b925061355286608087016134d3565b91506135628661010087016134d3565b905092959194509250565b60006001600160401b0382111561358657613586613243565b5060051b60200190565b600082601f8301126135a157600080fd5b813560206135b66135b18361356d565b613281565b8083825260208201915060208460061b8701019350868411156135d857600080fd5b602086015b848110156116da576135ef8882613453565b8352918301916040016135dd565b600082601f83011261360e57600080fd5b8135602061361e6135b18361356d565b82815260059290921b8401810191818101908684111561363d57600080fd5b8286015b848110156116da5780356001600160401b038111156136605760008081fd5b61366e8986838b0101613590565b845250918301918301613641565b600082601f83011261368d57600080fd5b8135602061369d6135b18361356d565b82815260059290921b840181019181810190868411156136bc57600080fd5b8286015b848110156116da5780356001600160401b038111156136df5760008081fd5b8701603f810189136136f15760008081fd5b8481013560406137036135b18361356d565b82815260079290921b8301810191878101908c8411156137235760008081fd5b938201935b8385101561374c5761373a8d866134d3565b82528882019150608085019450613728565b8752505050928401925083016136c0565b600082601f83011261376e57600080fd5b8135602061377e6135b18361356d565b8083825260208201915060208460051b8701019350868411156137a057600080fd5b602086015b848110156116da57803583529183019183016137a5565b600082601f8301126137cd57600080fd5b813560206137dd6135b18361356d565b82815260059290921b840181019181810190868411156137fc57600080fd5b8286015b848110156116da5780356001600160401b0381111561381f5760008081fd5b61382d8986838b010161375d565b845250918301918301613800565b600082601f83011261384c57600080fd5b8135602061385c6135b18361356d565b82815260059290921b8401810191818101908684111561387b57600080fd5b8286015b848110156116da5780356001600160401b0381111561389e5760008081fd5b6138ac8986838b01016132b1565b84525091830191830161387f565b60008060008060008060e087890312156138d357600080fd5b86356001600160401b03808211156138ea57600080fd5b6138f68a838b016135fd565b9750602089013591508082111561390c57600080fd5b6139188a838b0161367c565b9650604089013591508082111561392e57600080fd5b61393a8a838b016137bc565b9550606089013591508082111561395057600080fd5b61395c8a838b016132b1565b9450608089013591508082111561397257600080fd5b5061397f89828a0161383b565b92505061398f8860a08901613453565b90509295509295509295565b600080604083850312156139ae57600080fd5b6139b7836133b6565b946020939093013593505050565b600080600080600080600080610100898b0312156139e257600080fd5b505086359860208801359850604088013597606081013597506080810135965060a0810135955060c0810135945060e0013592509050565b600080600080600060a08688031215613a3257600080fd5b85356001600160401b0380821115613a4957600080fd5b613a5589838a01613590565b96506020880135915080821115613a6b57600080fd5b613a7789838a01613590565b9550604088013594506060880135915080821115613a9457600080fd5b50613aa18882890161375d565b95989497509295608001359392505050565b60008060008060808587031215613ac957600080fd5b613ad2856133b6565b93506020613ae18187016133b6565b935060408601356001600160401b0380821115613afd57600080fd5b818801915088601f830112613b1157600080fd5b8135613b1f6135b18261356d565b81815260059190911b8301840190848101908b831115613b3e57600080fd5b938501935b82851015613b6357613b54856133b6565b82529385019390850190613b43565b965050506060880135925080831115613b7b57600080fd5b5050613b89878288016132b1565b91505092959194509250565b6000806000806101408587031215613bac57600080fd5b613bb686866134d3565b9350613bc586608087016134d3565b939693955050505061010082013591610120013590565b6020808252825182820181905260009190848201906040850190845b81811015613c16578351151583529284019291840191600101613bf8565b50909695505050505050565b600080600080600060a08688031215613c3a57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060808587031215613c7357600080fd5b84356001600160401b0380821115613c8a57600080fd5b613c9688838901613590565b955060208701359450604087013593506060870135915080821115613cba57600080fd5b50613b898782880161375d565b60008060408385031215613cda57600080fd5b82356001600160401b03811115613cf057600080fd5b613cfc858286016132b1565b95602094909401359450505050565b600080600060608486031215613d2057600080fd5b8335925060208401356001600160401b03811115613d3d57600080fd5b613d498682870161375d565b925050604084013590509250925092565b60008060408385031215613d6d57600080fd5b8235915060208301356001600160401b03811115613d8a57600080fd5b6134158582860161375d565b600060408284031215613da857600080fd5b6122da8383613453565b6000825160005b81811015613dd35760208186018101518583015201613db9565b506000920191825250919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105fa576105fa613de1565b808201808211156105fa576105fa613de1565b634e487b7160e01b600052603260045260246000fd5b600060208284031215613e4957600080fd5b81516122da8161335c565b600060208284031215613e6657600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b818103818111156105fa576105fa613de1565b634e487b7160e01b600052601260045260246000fd5b600082613ebb57613ebb613e96565b500490565b600060ff821660ff8103613ed657613ed6613de1565b60010192915050565b600082613eee57613eee613e96565b50069056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220c935c39a7117ddb40adca8f2ffe82f5e7df5351d323efd4089cdfc3463a7f0e364736f6c63430008190033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// ECTwistAdd is a free data retrieval call binding the contract method 0x61a931ec.
//
// Solidity: function ECTwistAdd(uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy, uint256 pt2xx, uint256 pt2xy, uint256 pt2yx, uint256 pt2yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCaller) ECTwistAdd(opts *bind.CallOpts, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int, pt2xx *big.Int, pt2xy *big.Int, pt2yx *big.Int, pt2yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "ECTwistAdd", pt1xx, pt1xy, pt1yx, pt1yy, pt2xx, pt2xy, pt2yx, pt2yy)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return out0, out1, out2, out3, err

}

// ECTwistAdd is a free data retrieval call binding the contract method 0x61a931ec.
//
// Solidity: function ECTwistAdd(uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy, uint256 pt2xx, uint256 pt2xy, uint256 pt2yx, uint256 pt2yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractSession) ECTwistAdd(pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int, pt2xx *big.Int, pt2xy *big.Int, pt2yx *big.Int, pt2yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistAdd(&_Contract.CallOpts, pt1xx, pt1xy, pt1yx, pt1yy, pt2xx, pt2xy, pt2yx, pt2yy)
}

// ECTwistAdd is a free data retrieval call binding the contract method 0x61a931ec.
//
// Solidity: function ECTwistAdd(uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy, uint256 pt2xx, uint256 pt2xy, uint256 pt2yx, uint256 pt2yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCallerSession) ECTwistAdd(pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int, pt2xx *big.Int, pt2xy *big.Int, pt2yx *big.Int, pt2yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistAdd(&_Contract.CallOpts, pt1xx, pt1xy, pt1yx, pt1yy, pt2xx, pt2xy, pt2yx, pt2yy)
}

// ECTwistMul is a free data retrieval call binding the contract method 0xb73ab75d.
//
// Solidity: function ECTwistMul(uint256 s, uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCaller) ECTwistMul(opts *bind.CallOpts, s *big.Int, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "ECTwistMul", s, pt1xx, pt1xy, pt1yx, pt1yy)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return out0, out1, out2, out3, err

}

// ECTwistMul is a free data retrieval call binding the contract method 0xb73ab75d.
//
// Solidity: function ECTwistMul(uint256 s, uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractSession) ECTwistMul(s *big.Int, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistMul(&_Contract.CallOpts, s, pt1xx, pt1xy, pt1yx, pt1yy)
}

// ECTwistMul is a free data retrieval call binding the contract method 0xb73ab75d.
//
// Solidity: function ECTwistMul(uint256 s, uint256 pt1xx, uint256 pt1xy, uint256 pt1yx, uint256 pt1yy) view returns(uint256, uint256, uint256, uint256)
func (_Contract *ContractCallerSession) ECTwistMul(s *big.Int, pt1xx *big.Int, pt1xy *big.Int, pt1yx *big.Int, pt1yy *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Contract.Contract.ECTwistMul(&_Contract.CallOpts, s, pt1xx, pt1xy, pt1yx, pt1yy)
}

// GSSRecon is a free data retrieval call binding the contract method 0xebaf1aca.
//
// Solidity: function GSSRecon(uint256 nodeId, uint256[] Q, uint256 startIdx) view returns(uint256, uint256)
func (_Contract *ContractCaller) GSSRecon(opts *bind.CallOpts, nodeId *big.Int, Q []*big.Int, startIdx *big.Int) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GSSRecon", nodeId, Q, startIdx)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GSSRecon is a free data retrieval call binding the contract method 0xebaf1aca.
//
// Solidity: function GSSRecon(uint256 nodeId, uint256[] Q, uint256 startIdx) view returns(uint256, uint256)
func (_Contract *ContractSession) GSSRecon(nodeId *big.Int, Q []*big.Int, startIdx *big.Int) (*big.Int, *big.Int, error) {
	return _Contract.Contract.GSSRecon(&_Contract.CallOpts, nodeId, Q, startIdx)
}

// GSSRecon is a free data retrieval call binding the contract method 0xebaf1aca.
//
// Solidity: function GSSRecon(uint256 nodeId, uint256[] Q, uint256 startIdx) view returns(uint256, uint256)
func (_Contract *ContractCallerSession) GSSRecon(nodeId *big.Int, Q []*big.Int, startIdx *big.Int) (*big.Int, *big.Int, error) {
	return _Contract.Contract.GSSRecon(&_Contract.CallOpts, nodeId, Q, startIdx)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCaller) GetFieldModulus(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetFieldModulus")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCallerSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetKeyVrfResult is a free data retrieval call binding the contract method 0xacd6c00f.
//
// Solidity: function GetKeyVrfResult() view returns(bool[])
func (_Contract *ContractCaller) GetKeyVrfResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetKeyVrfResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetKeyVrfResult is a free data retrieval call binding the contract method 0xacd6c00f.
//
// Solidity: function GetKeyVrfResult() view returns(bool[])
func (_Contract *ContractSession) GetKeyVrfResult() ([]bool, error) {
	return _Contract.Contract.GetKeyVrfResult(&_Contract.CallOpts)
}

// GetKeyVrfResult is a free data retrieval call binding the contract method 0xacd6c00f.
//
// Solidity: function GetKeyVrfResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetKeyVrfResult() ([]bool, error) {
	return _Contract.Contract.GetKeyVrfResult(&_Contract.CallOpts)
}

// GetVerifyResult is a free data retrieval call binding the contract method 0xee3dffef.
//
// Solidity: function GetVerifyResult() view returns(bool[])
func (_Contract *ContractCaller) GetVerifyResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetVerifyResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetVerifyResult is a free data retrieval call binding the contract method 0xee3dffef.
//
// Solidity: function GetVerifyResult() view returns(bool[])
func (_Contract *ContractSession) GetVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetVerifyResult(&_Contract.CallOpts)
}

// GetVerifyResult is a free data retrieval call binding the contract method 0xee3dffef.
//
// Solidity: function GetVerifyResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetVerifyResult() ([]bool, error) {
	return _Contract.Contract.GetVerifyResult(&_Contract.CallOpts)
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances(address ) view returns(uint256)
func (_Contract *ContractCaller) Balances(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "balances", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances(address ) view returns(uint256)
func (_Contract *ContractSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.Balances(&_Contract.CallOpts, arg0)
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances(address ) view returns(uint256)
func (_Contract *ContractCallerSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.Balances(&_Contract.CallOpts, arg0)
}

// Empty is a free data retrieval call binding the contract method 0xf2a75fe4.
//
// Solidity: function empty() view returns()
func (_Contract *ContractCaller) Empty(opts *bind.CallOpts) error {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "empty")

	if err != nil {
		return err
	}

	return err

}

// Empty is a free data retrieval call binding the contract method 0xf2a75fe4.
//
// Solidity: function empty() view returns()
func (_Contract *ContractSession) Empty() error {
	return _Contract.Contract.Empty(&_Contract.CallOpts)
}

// Empty is a free data retrieval call binding the contract method 0xf2a75fe4.
//
// Solidity: function empty() view returns()
func (_Contract *ContractCallerSession) Empty() error {
	return _Contract.Contract.Empty(&_Contract.CallOpts)
}

// Expects is a free data retrieval call binding the contract method 0xe752b54b.
//
// Solidity: function expects(string ) view returns(uint256)
func (_Contract *ContractCaller) Expects(opts *bind.CallOpts, arg0 string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "expects", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Expects is a free data retrieval call binding the contract method 0xe752b54b.
//
// Solidity: function expects(string ) view returns(uint256)
func (_Contract *ContractSession) Expects(arg0 string) (*big.Int, error) {
	return _Contract.Contract.Expects(&_Contract.CallOpts, arg0)
}

// Expects is a free data retrieval call binding the contract method 0xe752b54b.
//
// Solidity: function expects(string ) view returns(uint256)
func (_Contract *ContractCallerSession) Expects(arg0 string) (*big.Int, error) {
	return _Contract.Contract.Expects(&_Contract.CallOpts, arg0)
}

// GetTokenBalance is a free data retrieval call binding the contract method 0x3aecd0e3.
//
// Solidity: function getTokenBalance(address token) view returns(uint256)
func (_Contract *ContractCaller) GetTokenBalance(opts *bind.CallOpts, token common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getTokenBalance", token)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTokenBalance is a free data retrieval call binding the contract method 0x3aecd0e3.
//
// Solidity: function getTokenBalance(address token) view returns(uint256)
func (_Contract *ContractSession) GetTokenBalance(token common.Address) (*big.Int, error) {
	return _Contract.Contract.GetTokenBalance(&_Contract.CallOpts, token)
}

// GetTokenBalance is a free data retrieval call binding the contract method 0x3aecd0e3.
//
// Solidity: function getTokenBalance(address token) view returns(uint256)
func (_Contract *ContractCallerSession) GetTokenBalance(token common.Address) (*big.Int, error) {
	return _Contract.Contract.GetTokenBalance(&_Contract.CallOpts, token)
}

// Nodes is a free data retrieval call binding the contract method 0x1c53c280.
//
// Solidity: function nodes(uint256 ) view returns(bool IsLeaf, uint256 Childrennum, uint256 T, uint256 Idx)
func (_Contract *ContractCaller) Nodes(opts *bind.CallOpts, arg0 *big.Int) (struct {
	IsLeaf      bool
	Childrennum *big.Int
	T           *big.Int
	Idx         *big.Int
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "nodes", arg0)

	outstruct := new(struct {
		IsLeaf      bool
		Childrennum *big.Int
		T           *big.Int
		Idx         *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.IsLeaf = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.Childrennum = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.T = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Idx = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Nodes is a free data retrieval call binding the contract method 0x1c53c280.
//
// Solidity: function nodes(uint256 ) view returns(bool IsLeaf, uint256 Childrennum, uint256 T, uint256 Idx)
func (_Contract *ContractSession) Nodes(arg0 *big.Int) (struct {
	IsLeaf      bool
	Childrennum *big.Int
	T           *big.Int
	Idx         *big.Int
}, error) {
	return _Contract.Contract.Nodes(&_Contract.CallOpts, arg0)
}

// Nodes is a free data retrieval call binding the contract method 0x1c53c280.
//
// Solidity: function nodes(uint256 ) view returns(bool IsLeaf, uint256 Childrennum, uint256 T, uint256 Idx)
func (_Contract *ContractCallerSession) Nodes(arg0 *big.Int) (struct {
	IsLeaf      bool
	Childrennum *big.Int
	T           *big.Int
	Idx         *big.Int
}, error) {
	return _Contract.Contract.Nodes(&_Contract.CallOpts, arg0)
}

// Path is a free data retrieval call binding the contract method 0x3dc06356.
//
// Solidity: function path() view returns(bool IsLeaf, uint256 Childrennum, uint256 T, uint256 Idx)
func (_Contract *ContractCaller) Path(opts *bind.CallOpts) (struct {
	IsLeaf      bool
	Childrennum *big.Int
	T           *big.Int
	Idx         *big.Int
}, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "path")

	outstruct := new(struct {
		IsLeaf      bool
		Childrennum *big.Int
		T           *big.Int
		Idx         *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.IsLeaf = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.Childrennum = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.T = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Idx = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Path is a free data retrieval call binding the contract method 0x3dc06356.
//
// Solidity: function path() view returns(bool IsLeaf, uint256 Childrennum, uint256 T, uint256 Idx)
func (_Contract *ContractSession) Path() (struct {
	IsLeaf      bool
	Childrennum *big.Int
	T           *big.Int
	Idx         *big.Int
}, error) {
	return _Contract.Contract.Path(&_Contract.CallOpts)
}

// Path is a free data retrieval call binding the contract method 0x3dc06356.
//
// Solidity: function path() view returns(bool IsLeaf, uint256 Childrennum, uint256 T, uint256 Idx)
func (_Contract *ContractCallerSession) Path() (struct {
	IsLeaf      bool
	Childrennum *big.Int
	T           *big.Int
	Idx         *big.Int
}, error) {
	return _Contract.Contract.Path(&_Contract.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x18762262.
//
// Solidity: function pool(address , string ) view returns(uint256)
func (_Contract *ContractCaller) Pool(opts *bind.CallOpts, arg0 common.Address, arg1 string) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "pool", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Pool is a free data retrieval call binding the contract method 0x18762262.
//
// Solidity: function pool(address , string ) view returns(uint256)
func (_Contract *ContractSession) Pool(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.Pool(&_Contract.CallOpts, arg0, arg1)
}

// Pool is a free data retrieval call binding the contract method 0x18762262.
//
// Solidity: function pool(address , string ) view returns(uint256)
func (_Contract *ContractCallerSession) Pool(arg0 common.Address, arg1 string) (*big.Int, error) {
	return _Contract.Contract.Pool(&_Contract.CallOpts, arg0, arg1)
}

// Checkkey is a paid mutator transaction binding the contract method 0x9dfc1b6f.
//
// Solidity: function Checkkey((uint256,uint256)[][] p1, (uint256[2],uint256[2])[][] p2, uint256[][] tmp, string gid, string[] attr, (uint256,uint256) pk) payable returns((uint256,uint256) Checkkeyresult)
func (_Contract *ContractTransactor) Checkkey(opts *bind.TransactOpts, p1 [][]DexG1Point, p2 [][]DexG2Point, tmp [][]*big.Int, gid string, attr []string, pk DexG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Checkkey", p1, p2, tmp, gid, attr, pk)
}

// Checkkey is a paid mutator transaction binding the contract method 0x9dfc1b6f.
//
// Solidity: function Checkkey((uint256,uint256)[][] p1, (uint256[2],uint256[2])[][] p2, uint256[][] tmp, string gid, string[] attr, (uint256,uint256) pk) payable returns((uint256,uint256) Checkkeyresult)
func (_Contract *ContractSession) Checkkey(p1 [][]DexG1Point, p2 [][]DexG2Point, tmp [][]*big.Int, gid string, attr []string, pk DexG1Point) (*types.Transaction, error) {
	return _Contract.Contract.Checkkey(&_Contract.TransactOpts, p1, p2, tmp, gid, attr, pk)
}

// Checkkey is a paid mutator transaction binding the contract method 0x9dfc1b6f.
//
// Solidity: function Checkkey((uint256,uint256)[][] p1, (uint256[2],uint256[2])[][] p2, uint256[][] tmp, string gid, string[] attr, (uint256,uint256) pk) payable returns((uint256,uint256) Checkkeyresult)
func (_Contract *ContractTransactorSession) Checkkey(p1 [][]DexG1Point, p2 [][]DexG2Point, tmp [][]*big.Int, gid string, attr []string, pk DexG1Point) (*types.Transaction, error) {
	return _Contract.Contract.Checkkey(&_Contract.TransactOpts, p1, p2, tmp, gid, attr, pk)
}

// Checkkeyp is a paid mutator transaction binding the contract method 0x308be012.
//
// Solidity: function Checkkeyp((uint256,uint256)[][] p1, (uint256[2],uint256[2])[][] p2, uint256[][] tmp, string gid, string[] attr, (uint256,uint256) pk) returns(bool)
func (_Contract *ContractTransactor) Checkkeyp(opts *bind.TransactOpts, p1 [][]DexG1Point, p2 [][]DexG2Point, tmp [][]*big.Int, gid string, attr []string, pk DexG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Checkkeyp", p1, p2, tmp, gid, attr, pk)
}

// Checkkeyp is a paid mutator transaction binding the contract method 0x308be012.
//
// Solidity: function Checkkeyp((uint256,uint256)[][] p1, (uint256[2],uint256[2])[][] p2, uint256[][] tmp, string gid, string[] attr, (uint256,uint256) pk) returns(bool)
func (_Contract *ContractSession) Checkkeyp(p1 [][]DexG1Point, p2 [][]DexG2Point, tmp [][]*big.Int, gid string, attr []string, pk DexG1Point) (*types.Transaction, error) {
	return _Contract.Contract.Checkkeyp(&_Contract.TransactOpts, p1, p2, tmp, gid, attr, pk)
}

// Checkkeyp is a paid mutator transaction binding the contract method 0x308be012.
//
// Solidity: function Checkkeyp((uint256,uint256)[][] p1, (uint256[2],uint256[2])[][] p2, uint256[][] tmp, string gid, string[] attr, (uint256,uint256) pk) returns(bool)
func (_Contract *ContractTransactorSession) Checkkeyp(p1 [][]DexG1Point, p2 [][]DexG2Point, tmp [][]*big.Int, gid string, attr []string, pk DexG1Point) (*types.Transaction, error) {
	return _Contract.Contract.Checkkeyp(&_Contract.TransactOpts, p1, p2, tmp, gid, attr, pk)
}

// Deposit is a paid mutator transaction binding the contract method 0x80dfa405.
//
// Solidity: function Deposit(string GID) payable returns(bool)
func (_Contract *ContractTransactor) Deposit(opts *bind.TransactOpts, GID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Deposit", GID)
}

// Deposit is a paid mutator transaction binding the contract method 0x80dfa405.
//
// Solidity: function Deposit(string GID) payable returns(bool)
func (_Contract *ContractSession) Deposit(GID string) (*types.Transaction, error) {
	return _Contract.Contract.Deposit(&_Contract.TransactOpts, GID)
}

// Deposit is a paid mutator transaction binding the contract method 0x80dfa405.
//
// Solidity: function Deposit(string GID) payable returns(bool)
func (_Contract *ContractTransactorSession) Deposit(GID string) (*types.Transaction, error) {
	return _Contract.Contract.Deposit(&_Contract.TransactOpts, GID)
}

// Expect is a paid mutator transaction binding the contract method 0xd1bef29f.
//
// Solidity: function Expect(string GID, uint256 ownerVal) payable returns(bool)
func (_Contract *ContractTransactor) Expect(opts *bind.TransactOpts, GID string, ownerVal *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Expect", GID, ownerVal)
}

// Expect is a paid mutator transaction binding the contract method 0xd1bef29f.
//
// Solidity: function Expect(string GID, uint256 ownerVal) payable returns(bool)
func (_Contract *ContractSession) Expect(GID string, ownerVal *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Expect(&_Contract.TransactOpts, GID, ownerVal)
}

// Expect is a paid mutator transaction binding the contract method 0xd1bef29f.
//
// Solidity: function Expect(string GID, uint256 ownerVal) payable returns(bool)
func (_Contract *ContractTransactorSession) Expect(GID string, ownerVal *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Expect(&_Contract.TransactOpts, GID, ownerVal)
}

// HashToG1 is a paid mutator transaction binding the contract method 0x129ee0f6.
//
// Solidity: function HashToG1(string str) payable returns((uint256,uint256))
func (_Contract *ContractTransactor) HashToG1(opts *bind.TransactOpts, str string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "HashToG1", str)
}

// HashToG1 is a paid mutator transaction binding the contract method 0x129ee0f6.
//
// Solidity: function HashToG1(string str) payable returns((uint256,uint256))
func (_Contract *ContractSession) HashToG1(str string) (*types.Transaction, error) {
	return _Contract.Contract.HashToG1(&_Contract.TransactOpts, str)
}

// HashToG1 is a paid mutator transaction binding the contract method 0x129ee0f6.
//
// Solidity: function HashToG1(string str) payable returns((uint256,uint256))
func (_Contract *ContractTransactorSession) HashToG1(str string) (*types.Transaction, error) {
	return _Contract.Contract.HashToG1(&_Contract.TransactOpts, str)
}

// PVGSSKeyVrf is a paid mutator transaction binding the contract method 0x299c8d47.
//
// Solidity: function PVGSSKeyVrf((uint256,uint256) C, (uint256,uint256) decShare, (uint256[2],uint256[2]) pk2, (uint256[2],uint256[2]) g2) payable returns(bool)
func (_Contract *ContractTransactor) PVGSSKeyVrf(opts *bind.TransactOpts, C DexG1Point, decShare DexG1Point, pk2 DexG2Point, g2 DexG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "PVGSSKeyVrf", C, decShare, pk2, g2)
}

// PVGSSKeyVrf is a paid mutator transaction binding the contract method 0x299c8d47.
//
// Solidity: function PVGSSKeyVrf((uint256,uint256) C, (uint256,uint256) decShare, (uint256[2],uint256[2]) pk2, (uint256[2],uint256[2]) g2) payable returns(bool)
func (_Contract *ContractSession) PVGSSKeyVrf(C DexG1Point, decShare DexG1Point, pk2 DexG2Point, g2 DexG2Point) (*types.Transaction, error) {
	return _Contract.Contract.PVGSSKeyVrf(&_Contract.TransactOpts, C, decShare, pk2, g2)
}

// PVGSSKeyVrf is a paid mutator transaction binding the contract method 0x299c8d47.
//
// Solidity: function PVGSSKeyVrf((uint256,uint256) C, (uint256,uint256) decShare, (uint256[2],uint256[2]) pk2, (uint256[2],uint256[2]) g2) payable returns(bool)
func (_Contract *ContractTransactorSession) PVGSSKeyVrf(C DexG1Point, decShare DexG1Point, pk2 DexG2Point, g2 DexG2Point) (*types.Transaction, error) {
	return _Contract.Contract.PVGSSKeyVrf(&_Contract.TransactOpts, C, decShare, pk2, g2)
}

// PVGSSVerify is a paid mutator transaction binding the contract method 0x9b2c7621.
//
// Solidity: function PVGSSVerify((uint256,uint256)[] C, (uint256,uint256)[] PK, uint256 nodeId, uint256[] Q, uint256 startIdx) payable returns(bool)
func (_Contract *ContractTransactor) PVGSSVerify(opts *bind.TransactOpts, C []DexG1Point, PK []DexG1Point, nodeId *big.Int, Q []*big.Int, startIdx *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "PVGSSVerify", C, PK, nodeId, Q, startIdx)
}

// PVGSSVerify is a paid mutator transaction binding the contract method 0x9b2c7621.
//
// Solidity: function PVGSSVerify((uint256,uint256)[] C, (uint256,uint256)[] PK, uint256 nodeId, uint256[] Q, uint256 startIdx) payable returns(bool)
func (_Contract *ContractSession) PVGSSVerify(C []DexG1Point, PK []DexG1Point, nodeId *big.Int, Q []*big.Int, startIdx *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.PVGSSVerify(&_Contract.TransactOpts, C, PK, nodeId, Q, startIdx)
}

// PVGSSVerify is a paid mutator transaction binding the contract method 0x9b2c7621.
//
// Solidity: function PVGSSVerify((uint256,uint256)[] C, (uint256,uint256)[] PK, uint256 nodeId, uint256[] Q, uint256 startIdx) payable returns(bool)
func (_Contract *ContractTransactorSession) PVGSSVerify(C []DexG1Point, PK []DexG1Point, nodeId *big.Int, Q []*big.Int, startIdx *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.PVGSSVerify(&_Contract.TransactOpts, C, PK, nodeId, Q, startIdx)
}

// Reward is a paid mutator transaction binding the contract method 0xa12988bd.
//
// Solidity: function Reward(address addrU, address addrO, address[] addrsAA, string GID) payable returns(bool)
func (_Contract *ContractTransactor) Reward(opts *bind.TransactOpts, addrU common.Address, addrO common.Address, addrsAA []common.Address, GID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Reward", addrU, addrO, addrsAA, GID)
}

// Reward is a paid mutator transaction binding the contract method 0xa12988bd.
//
// Solidity: function Reward(address addrU, address addrO, address[] addrsAA, string GID) payable returns(bool)
func (_Contract *ContractSession) Reward(addrU common.Address, addrO common.Address, addrsAA []common.Address, GID string) (*types.Transaction, error) {
	return _Contract.Contract.Reward(&_Contract.TransactOpts, addrU, addrO, addrsAA, GID)
}

// Reward is a paid mutator transaction binding the contract method 0xa12988bd.
//
// Solidity: function Reward(address addrU, address addrO, address[] addrsAA, string GID) payable returns(bool)
func (_Contract *ContractTransactorSession) Reward(addrU common.Address, addrO common.Address, addrsAA []common.Address, GID string) (*types.Transaction, error) {
	return _Contract.Contract.Reward(&_Contract.TransactOpts, addrU, addrO, addrsAA, GID)
}

// UploadProof is a paid mutator transaction binding the contract method 0xc6f90b23.
//
// Solidity: function UploadProof((uint256,uint256)[] cp, uint256 xc, uint256 shat, uint256[] shatArray) payable returns()
func (_Contract *ContractTransactor) UploadProof(opts *bind.TransactOpts, cp []DexG1Point, xc *big.Int, shat *big.Int, shatArray []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadProof", cp, xc, shat, shatArray)
}

// UploadProof is a paid mutator transaction binding the contract method 0xc6f90b23.
//
// Solidity: function UploadProof((uint256,uint256)[] cp, uint256 xc, uint256 shat, uint256[] shatArray) payable returns()
func (_Contract *ContractSession) UploadProof(cp []DexG1Point, xc *big.Int, shat *big.Int, shatArray []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadProof(&_Contract.TransactOpts, cp, xc, shat, shatArray)
}

// UploadProof is a paid mutator transaction binding the contract method 0xc6f90b23.
//
// Solidity: function UploadProof((uint256,uint256)[] cp, uint256 xc, uint256 shat, uint256[] shatArray) payable returns()
func (_Contract *ContractTransactorSession) UploadProof(cp []DexG1Point, xc *big.Int, shat *big.Int, shatArray []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadProof(&_Contract.TransactOpts, cp, xc, shat, shatArray)
}

// Withdraw is a paid mutator transaction binding the contract method 0xcb36594c.
//
// Solidity: function Withdraw(string GID) payable returns(bool)
func (_Contract *ContractTransactor) Withdraw(opts *bind.TransactOpts, GID string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Withdraw", GID)
}

// Withdraw is a paid mutator transaction binding the contract method 0xcb36594c.
//
// Solidity: function Withdraw(string GID) payable returns(bool)
func (_Contract *ContractSession) Withdraw(GID string) (*types.Transaction, error) {
	return _Contract.Contract.Withdraw(&_Contract.TransactOpts, GID)
}

// Withdraw is a paid mutator transaction binding the contract method 0xcb36594c.
//
// Solidity: function Withdraw(string GID) payable returns(bool)
func (_Contract *ContractTransactorSession) Withdraw(GID string) (*types.Transaction, error) {
	return _Contract.Contract.Withdraw(&_Contract.TransactOpts, GID)
}

// AddChild is a paid mutator transaction binding the contract method 0xf318e3a6.
//
// Solidity: function addChild(uint256 parentIdx, uint256[] childIdxs) payable returns()
func (_Contract *ContractTransactor) AddChild(opts *bind.TransactOpts, parentIdx *big.Int, childIdxs []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addChild", parentIdx, childIdxs)
}

// AddChild is a paid mutator transaction binding the contract method 0xf318e3a6.
//
// Solidity: function addChild(uint256 parentIdx, uint256[] childIdxs) payable returns()
func (_Contract *ContractSession) AddChild(parentIdx *big.Int, childIdxs []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.AddChild(&_Contract.TransactOpts, parentIdx, childIdxs)
}

// AddChild is a paid mutator transaction binding the contract method 0xf318e3a6.
//
// Solidity: function addChild(uint256 parentIdx, uint256[] childIdxs) payable returns()
func (_Contract *ContractTransactorSession) AddChild(parentIdx *big.Int, childIdxs []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.AddChild(&_Contract.TransactOpts, parentIdx, childIdxs)
}

// CheckkeyEq2 is a paid mutator transaction binding the contract method 0xa6696ceb.
//
// Solidity: function checkkey_eq2((uint256[2],uint256[2]) EK1Arr, (uint256[2],uint256[2]) EK1pArr, uint256 c, uint256 w3) payable returns(bool)
func (_Contract *ContractTransactor) CheckkeyEq2(opts *bind.TransactOpts, EK1Arr DexG2Point, EK1pArr DexG2Point, c *big.Int, w3 *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "checkkey_eq2", EK1Arr, EK1pArr, c, w3)
}

// CheckkeyEq2 is a paid mutator transaction binding the contract method 0xa6696ceb.
//
// Solidity: function checkkey_eq2((uint256[2],uint256[2]) EK1Arr, (uint256[2],uint256[2]) EK1pArr, uint256 c, uint256 w3) payable returns(bool)
func (_Contract *ContractSession) CheckkeyEq2(EK1Arr DexG2Point, EK1pArr DexG2Point, c *big.Int, w3 *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.CheckkeyEq2(&_Contract.TransactOpts, EK1Arr, EK1pArr, c, w3)
}

// CheckkeyEq2 is a paid mutator transaction binding the contract method 0xa6696ceb.
//
// Solidity: function checkkey_eq2((uint256[2],uint256[2]) EK1Arr, (uint256[2],uint256[2]) EK1pArr, uint256 c, uint256 w3) payable returns(bool)
func (_Contract *ContractTransactorSession) CheckkeyEq2(EK1Arr DexG2Point, EK1pArr DexG2Point, c *big.Int, w3 *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.CheckkeyEq2(&_Contract.TransactOpts, EK1Arr, EK1pArr, c, w3)
}

// CreateNode is a paid mutator transaction binding the contract method 0x17743e69.
//
// Solidity: function createNode(uint256 parentIdx, uint256 idx, bool isLeaf, uint256 childNum, uint256 t) payable returns()
func (_Contract *ContractTransactor) CreateNode(opts *bind.TransactOpts, parentIdx *big.Int, idx *big.Int, isLeaf bool, childNum *big.Int, t *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createNode", parentIdx, idx, isLeaf, childNum, t)
}

// CreateNode is a paid mutator transaction binding the contract method 0x17743e69.
//
// Solidity: function createNode(uint256 parentIdx, uint256 idx, bool isLeaf, uint256 childNum, uint256 t) payable returns()
func (_Contract *ContractSession) CreateNode(parentIdx *big.Int, idx *big.Int, isLeaf bool, childNum *big.Int, t *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.CreateNode(&_Contract.TransactOpts, parentIdx, idx, isLeaf, childNum, t)
}

// CreateNode is a paid mutator transaction binding the contract method 0x17743e69.
//
// Solidity: function createNode(uint256 parentIdx, uint256 idx, bool isLeaf, uint256 childNum, uint256 t) payable returns()
func (_Contract *ContractTransactorSession) CreateNode(parentIdx *big.Int, idx *big.Int, isLeaf bool, childNum *big.Int, t *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.CreateNode(&_Contract.TransactOpts, parentIdx, idx, isLeaf, childNum, t)
}

// Negate is a paid mutator transaction binding the contract method 0xfb6b9e9a.
//
// Solidity: function negate((uint256,uint256) p) payable returns((uint256,uint256))
func (_Contract *ContractTransactor) Negate(opts *bind.TransactOpts, p DexG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "negate", p)
}

// Negate is a paid mutator transaction binding the contract method 0xfb6b9e9a.
//
// Solidity: function negate((uint256,uint256) p) payable returns((uint256,uint256))
func (_Contract *ContractSession) Negate(p DexG1Point) (*types.Transaction, error) {
	return _Contract.Contract.Negate(&_Contract.TransactOpts, p)
}

// Negate is a paid mutator transaction binding the contract method 0xfb6b9e9a.
//
// Solidity: function negate((uint256,uint256) p) payable returns((uint256,uint256))
func (_Contract *ContractTransactorSession) Negate(p DexG1Point) (*types.Transaction, error) {
	return _Contract.Contract.Negate(&_Contract.TransactOpts, p)
}

// ReceiveTokens is a paid mutator transaction binding the contract method 0x35729130.
//
// Solidity: function receiveTokens(address token, uint256 amount) returns()
func (_Contract *ContractTransactor) ReceiveTokens(opts *bind.TransactOpts, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "receiveTokens", token, amount)
}

// ReceiveTokens is a paid mutator transaction binding the contract method 0x35729130.
//
// Solidity: function receiveTokens(address token, uint256 amount) returns()
func (_Contract *ContractSession) ReceiveTokens(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ReceiveTokens(&_Contract.TransactOpts, token, amount)
}

// ReceiveTokens is a paid mutator transaction binding the contract method 0x35729130.
//
// Solidity: function receiveTokens(address token, uint256 amount) returns()
func (_Contract *ContractTransactorSession) ReceiveTokens(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ReceiveTokens(&_Contract.TransactOpts, token, amount)
}

// ContractTokensReceivedIterator is returned from FilterTokensReceived and is used to iterate over the raw logs and unpacked data for TokensReceived events raised by the Contract contract.
type ContractTokensReceivedIterator struct {
	Event *ContractTokensReceived // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractTokensReceivedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractTokensReceived)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractTokensReceived)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractTokensReceivedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractTokensReceivedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractTokensReceived represents a TokensReceived event raised by the Contract contract.
type ContractTokensReceived struct {
	Token  common.Address
	From   common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTokensReceived is a free log retrieval operation binding the contract event 0x0af1239547617509a79d1ff0ee4be9ca943bc8410cb0b282dda97d27995a0acd.
//
// Solidity: event TokensReceived(address indexed token, address indexed from, uint256 amount)
func (_Contract *ContractFilterer) FilterTokensReceived(opts *bind.FilterOpts, token []common.Address, from []common.Address) (*ContractTokensReceivedIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "TokensReceived", tokenRule, fromRule)
	if err != nil {
		return nil, err
	}
	return &ContractTokensReceivedIterator{contract: _Contract.contract, event: "TokensReceived", logs: logs, sub: sub}, nil
}

// WatchTokensReceived is a free log subscription operation binding the contract event 0x0af1239547617509a79d1ff0ee4be9ca943bc8410cb0b282dda97d27995a0acd.
//
// Solidity: event TokensReceived(address indexed token, address indexed from, uint256 amount)
func (_Contract *ContractFilterer) WatchTokensReceived(opts *bind.WatchOpts, sink chan<- *ContractTokensReceived, token []common.Address, from []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}
	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "TokensReceived", tokenRule, fromRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractTokensReceived)
				if err := _Contract.contract.UnpackLog(event, "TokensReceived", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTokensReceived is a log parse operation binding the contract event 0x0af1239547617509a79d1ff0ee4be9ca943bc8410cb0b282dda97d27995a0acd.
//
// Solidity: event TokensReceived(address indexed token, address indexed from, uint256 amount)
func (_Contract *ContractFilterer) ParseTokensReceived(log types.Log) (*ContractTokensReceived, error) {
	event := new(ContractTokensReceived)
	if err := _Contract.contract.UnpackLog(event, "TokensReceived", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
